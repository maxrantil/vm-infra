# ABOUTME: Infrastructure security scanning using Trivy, Checkov, ansible-lint, and shellcheck
name: Infrastructure Security Scanning

on:
  pull_request:
    branches: [master]
    paths:
      - 'terraform/**'
      - 'ansible/**'
      - 'cloud-init/**'
      - 'provision-vm.sh'
      - 'destroy-vm.sh'
      - '.github/workflows/security-scan.yml'
  push:
    branches: [master]
    paths:
      - 'terraform/**'
      - 'ansible/**'
      - 'cloud-init/**'
      - 'provision-vm.sh'
      - 'destroy-vm.sh'
  schedule:
    # Run weekly on Monday at 9 AM UTC to catch new vulnerabilities
    - cron: '0 9 * * 1'
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read
  security-events: write  # Required for SARIF upload to GitHub Security tab

jobs:
  trivy-iac-scan:
    name: Trivy IaC Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Run Trivy vulnerability scanner in IaC mode
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8  # latest (2025-10-13)
        with:
          scan-type: 'config'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'MEDIUM,HIGH,CRITICAL'
          exit-code: '0'  # soft-fail initially for baseline establishment
          trivyignores: '.trivyignore'

      - name: Display Trivy results (human-readable)
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8  # latest (2025-10-13)
        with:
          scan-type: 'config'
          scan-ref: '.'
          format: 'table'
          severity: 'MEDIUM,HIGH,CRITICAL'
          exit-code: '0'

      - name: Upload Trivy results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@7dccf72e419e51b915f40df725d7c2e766b51b44  # v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
          category: 'trivy-iac'

  checkov-scan:
    name: Checkov IaC Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@cba89e33f08479973cadc681333ffe84f7c8e824  # latest (2025-10-13)
        with:
          directory: .
          framework: terraform,ansible,secrets
          quiet: false
          soft_fail: true  # soft-fail initially for baseline establishment
          output_format: cli,sarif
          output_file_path: console,checkov-results.sarif
          config_file: .checkov.yml
          compact: true

      - name: Upload Checkov results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@7dccf72e419e51b915f40df725d7c2e766b51b44  # v3
        if: always()
        with:
          sarif_file: 'checkov-results.sarif'
          category: 'checkov-iac'

  ansible-security-lint:
    name: Ansible Security Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # v5.6.0
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install ansible-lint with security profile
        run: |
          pip install --upgrade pip
          pip install ansible-lint==24.9.2  # Pin version for consistency

      - name: Run ansible-lint with production profile
        run: |
          cd ansible
          ansible-lint --profile production \
                       --format rich \
                       --show-relpath \
                       --nocolor \
                       playbook.yml || true  # soft-fail initially

      - name: Run ansible-lint for SARIF output
        run: |
          cd ansible
          ansible-lint --profile production \
                       --format sarif \
                       --output-file ../ansible-lint-results.sarif \
                       playbook.yml || true
        continue-on-error: true

      - name: Upload ansible-lint results
        uses: github/codeql-action/upload-sarif@7dccf72e419e51b915f40df725d7c2e766b51b44  # v3
        if: always()
        with:
          sarif_file: 'ansible-lint-results.sarif'
          category: 'ansible-lint'

  shell-security-scan:
    name: ShellCheck Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Run ShellCheck on provision script
        run: |
          shellcheck --severity=warning \
                     --format=gcc \
                     provision-vm.sh destroy-vm.sh || true  # soft-fail initially

      - name: Run ShellCheck on test scripts
        run: |
          shellcheck --severity=warning \
                     --format=gcc \
                     tests/*.sh || true
        continue-on-error: true
