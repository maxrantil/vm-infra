---
- name: Configure Ubuntu VMs
  hosts: all
  become: yes

  tasks:
    - name: Ensure system is up to date
      apt:
        update_cache: yes
        upgrade: dist

    - name: Install core packages
      apt:
        name:
          # Core tools
          - git
          - curl
          - wget
          - vim
          - neovim
          - zsh
          - build-essential
          - python3
          - python3-pip
          - python3-venv

          # CLI productivity tools
          - tmux
          - bat
          - fzf
          - ripgrep
          - fd-find
          - jq
          - tree
          - htop
          - ncdu
          - tldr

          # Development tools
          - gh  # GitHub CLI
          - shellcheck
          - cmake
          - ansible

          # Utilities
          - ccze
          - unzip
          - zip
          - net-tools

        state: present

    # yq needs to be installed manually (not in Ubuntu repos with good version)
    - name: Install yq
      get_url:
        url: https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
        dest: /usr/local/bin/yq
        mode: '0755'

    # fd is installed as fdfind on Ubuntu, create symlink
    - name: Create fd symlink
      file:
        src: /usr/bin/fdfind
        dest: /usr/local/bin/fd
        state: link

    # bat is installed as batcat on Ubuntu, create symlink
    - name: Create bat symlink
      file:
        src: /usr/bin/batcat
        dest: /usr/local/bin/bat
        state: link

    # Install git-delta for better diffs
    - name: Get latest git-delta release URL
      shell: curl -s https://api.github.com/repos/dandavison/delta/releases/latest | grep "browser_download_url.*x86_64-unknown-linux-gnu.tar.gz" | cut -d '"' -f 4
      register: delta_url
      changed_when: false

    - name: Install git-delta
      get_url:
        url: "{{ delta_url.stdout }}"
        dest: /tmp/delta.tar.gz
        mode: '0644'

    - name: Extract git-delta
      unarchive:
        src: /tmp/delta.tar.gz
        dest: /tmp/
        remote_src: yes

    - name: Move delta binary to /usr/local/bin
      shell: |
        find /tmp -name delta -type f -executable -exec mv {} /usr/local/bin/delta \;
        chmod +x /usr/local/bin/delta
      args:
        creates: /usr/local/bin/delta

    # Install starship prompt
    - name: Download starship installer
      get_url:
        url: https://starship.rs/install.sh
        dest: /tmp/starship-install.sh
        mode: '0755'

    - name: Install starship
      shell: /tmp/starship-install.sh -y
      args:
        creates: /usr/local/bin/starship

    - name: Change default shell to zsh for user mr
      user:
        name: mr
        shell: /usr/bin/zsh

    # Setup SSH for git operations
    - name: Create .ssh directory for user mr
      file:
        path: /home/mr/.ssh
        state: directory
        owner: mr
        group: mr
        mode: '0700'

    - name: Copy GitHub SSH private key to VM
      copy:
        src: ~/.ssh/id_ed25519
        dest: /home/mr/.ssh/id_ed25519
        owner: mr
        group: mr
        mode: '0600'

    - name: Copy GitHub SSH public key to VM
      copy:
        src: ~/.ssh/id_ed25519.pub
        dest: /home/mr/.ssh/id_ed25519.pub
        owner: mr
        group: mr
        mode: '0644'

    - name: Add GitHub to known hosts
      known_hosts:
        name: github.com
        key: "{{ lookup('pipe', 'ssh-keyscan -t rsa github.com') }}"
        path: /home/mr/.ssh/known_hosts
        state: present
      become_user: mr

    # Clone dotfiles repository
    - name: Clone dotfiles repository
      git:
        repo: git@github.com:maxrantil/dotfiles.git
        dest: /home/mr/.dotfiles
        clone: yes
        update: yes
      become_user: mr

    # Run dotfiles install script
    - name: Run dotfiles install script
      command: /home/mr/.dotfiles/install.sh
      become_user: mr
      args:
        creates: /home/mr/.dotfiles/.install_complete

    - name: Mark dotfiles installation as complete
      file:
        path: /home/mr/.dotfiles/.install_complete
        state: touch
        owner: mr
        group: mr
        mode: '0644'

    # Install zsh plugins
    - name: Install zsh-syntax-highlighting
      apt:
        name: zsh-syntax-highlighting
        state: present

    - name: Install zsh-autosuggestions
      apt:
        name: zsh-autosuggestions
        state: present

    # Create nvim directories
    - name: Create nvim undo directory
      file:
        path: /home/mr/.cache/nvim/undo
        state: directory
        owner: mr
        group: mr
        mode: '0700'

    - name: Create nvim autoload directory
      file:
        path: /home/mr/.config/nvim/autoload
        state: directory
        owner: mr
        group: mr
        mode: '0755'

    # Install vim-plug for neovim
    - name: Install vim-plug for neovim
      get_url:
        url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
        dest: /home/mr/.config/nvim/autoload/plug.vim
        owner: mr
        group: mr
        mode: '0644'
      become_user: mr

    # Install tmux plugin manager (TPM)
    - name: Clone TPM (tmux plugin manager)
      git:
        repo: git@github.com:tmux-plugins/tpm
        dest: /home/mr/.tmux/plugins/tpm
        clone: yes
        update: yes
      become_user: mr

    - name: Configure SSH to disable password auth
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?PasswordAuthentication'
        line: 'PasswordAuthentication no'
      notify: restart ssh

  handlers:
    - name: restart ssh
      service:
        name: ssh
        state: restarted
